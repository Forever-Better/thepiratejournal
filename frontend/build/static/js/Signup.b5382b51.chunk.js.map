{"version":3,"file":"static/js/Signup.b5382b51.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/Auth/SignupPage/Signup.module.scss?8ac3","pages/Auth/SignupPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Signup_root__S53My\",\"social__buttons\":\"Signup_social__buttons__2jTiE\",\"social__button\":\"Signup_social__button__jDuh1\",\"googleIcon\":\"Signup_googleIcon__pDK4Q\",\"socials__separator\":\"Signup_socials__separator__HMTW7\",\"instructions\":\"Signup_instructions__TGzQ3\",\"fields\":\"Signup_fields__b9203\",\"name\":\"Signup_name__t9j99\",\"field\":\"Signup_field__vio3W\",\"password__field\":\"Signup_password__field__kcJra\",\"submit\":\"Signup_submit__g233H\"};","import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useSignupMutation } from '../../../redux';\r\nimport { useDocTitle, useNetworkStatus } from '../../../hooks';\r\nimport { Button, CardLayout, VisibilityToggle } from '../../../components';\r\n\r\nimport styles from './Signup.module.scss';\r\n\r\nconst Signup = () => {\r\n    useDocTitle('Зарегистрироваться');\r\n    const { isOnline } = useNetworkStatus();\r\n    const navigate = useNavigate();\r\n    const [signup, { isLoading, isError, error }] = useSignupMutation();\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isValidating },\r\n        handleSubmit,\r\n    } = useForm({\r\n        mode: 'onTouched',\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            await signup(data).unwrap();\r\n            navigate('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const [passwordEye, setPasswordEye] = useState(false);\r\n\r\n    return (\r\n        <CardLayout>\r\n            <div className={styles.root}>\r\n                <div className={styles.instructions}>\r\n                    <p style={{ fontWeight: 700 }}>Зарегистрируйтесь с помощью электронной почты</p>\r\n                    <p>\r\n                        У вас уже есть учетная запись? <Link to=\"/login\">Войти</Link>\r\n                    </p>\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)} className={styles.emailForm}>\r\n                    <div className={styles.fields}>\r\n                        <div className={styles.field}>\r\n                            <label className=\"field-label\">Имя пользователя</label>\r\n                            <input\r\n                                {...register('username', {\r\n                                    required: 'Введите имя пользователя.',\r\n                                    pattern: {\r\n                                        value: /^(?=.{4,16}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/,\r\n                                        message: 'Введите имя пользователя.',\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 4,\r\n                                        message: 'Минимум 4 символа.',\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 16,\r\n                                        message: 'Максимум 16 символов.',\r\n                                    },\r\n                                })}\r\n                                disabled={isLoading}\r\n                                type=\"text\"\r\n                                className={`text-field ${errors?.username && `is-invalid`}`}\r\n                            />\r\n                            {errors?.username && (\r\n                                <label className=\"field-label error-label\">\r\n                                    {errors?.username?.message}\r\n                                </label>\r\n                            )}\r\n                        </div>\r\n                        <div className={styles.field}>\r\n                            <label className=\"field-label\">Адрес электронной почты</label>\r\n                            <input\r\n                                {...register('email', {\r\n                                    required: 'Введите адрес электронной почты.',\r\n                                    pattern: {\r\n                                        value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                        message: 'Введите email',\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: 'Минимум 5 символов.',\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 32,\r\n                                    },\r\n                                })}\r\n                                disabled={isLoading}\r\n                                type=\"email\"\r\n                                className={`text-field  ${errors?.email && `is-invalid`}`}\r\n                            />\r\n                            {errors?.email && (\r\n                                <label className=\"field-label error-label\">\r\n                                    {errors?.email?.message}\r\n                                </label>\r\n                            )}\r\n                        </div>\r\n                        <div className={styles.field}>\r\n                            <label className=\"field-label\">Пароль</label>\r\n                            <div className={styles.password__field}>\r\n                                <input\r\n                                    {...register('password', {\r\n                                        required: 'Введите пароль.',\r\n                                        pattern: {\r\n                                            value: /(?=.*[0-9])(?=.*[A-Z])(?=.*[a-z])/,\r\n                                            message:\r\n                                                'Должен содержать как строчные (a-z), так и прописные буквы (A-Z), хотя бы одну цифру (0-9) и символ.',\r\n                                        },\r\n                                        minLength: {\r\n                                            value: 8,\r\n                                            message: 'Минимум 8 символов.',\r\n                                        },\r\n                                        maxLength: {\r\n                                            value: 20,\r\n                                        },\r\n                                    })}\r\n                                    disabled={isLoading}\r\n                                    className={`text-field ${\r\n                                        isValidating === true ? `is-valid` : ''\r\n                                    } ${errors?.password && `is-invalid`}`}\r\n                                    type={passwordEye === true ? 'text' : 'password'}\r\n                                />\r\n                                <VisibilityToggle\r\n                                    style={errors?.password ? { right: 20 } : { right: 0 }}\r\n                                    passwordEye={passwordEye}\r\n                                    setPasswordEye={setPasswordEye}\r\n                                />\r\n                            </div>\r\n                            {errors?.password && (\r\n                                <label className=\"field-label error-label\">\r\n                                    {errors?.password?.message}\r\n                                </label>\r\n                            )}\r\n                        </div>\r\n                        {isError && (\r\n                            <label className=\"field-label error-label \">{error.data.message}</label>\r\n                        )}\r\n                    </div>\r\n\r\n                    <section className={styles.submit}>\r\n                        <Button\r\n                            isLoading={isLoading}\r\n                            isDisabled={!isOnline || isLoading}\r\n                            type=\"submit\"\r\n                            variant=\"filled\">\r\n                            Создать\r\n                        </Button>\r\n                    </section>\r\n                </form>\r\n            </div>\r\n        </CardLayout>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["useDocTitle","isOnline","useNetworkStatus","navigate","useNavigate","useSignupMutation","signup","isLoading","isError","error","useForm","mode","register","formState","errors","isValidating","handleSubmit","onSubmit","data","unwrap","console","log","useState","passwordEye","setPasswordEye","className","styles","style","fontWeight","to","required","pattern","value","message","minLength","maxLength","disabled","type","username","email","password","right","isDisabled","variant"],"sourceRoot":""}
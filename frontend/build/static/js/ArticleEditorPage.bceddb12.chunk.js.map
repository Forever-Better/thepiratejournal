{"version":3,"file":"static/js/ArticleEditorPage.bceddb12.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Buttons/BtnLeftFixed/BtnLeftFixed.module.scss?3d56","components/Buttons/BtnLeftFixed/index.tsx","webpack://client/./src/components/Buttons/ButtonClose/ButtonClose.module.scss?c963","components/Buttons/ButtonClose/index.tsx","webpack://client/./src/pages/ArticleEditorPage/ArticleEditorPage.module.scss?eedc","pages/ArticleEditorPage/configuration.js","webpack://client/./src/components/CoverWindow/CoverWindow.module.scss?d59d","components/CoverWindow/index.tsx","pages/ArticleEditorPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BtnLeftFixed_root__49-y8\",\"icon\":\"BtnLeftFixed_icon__ncR0K\"};","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport styles from './BtnLeftFixed.module.scss';\r\n\r\nexport const BtnLeftFixed = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const BtnBack = (\r\n        <button onClick={() => navigate(-1)} className={styles.root}>\r\n            <div className={`${styles.icon} icon-center`}>\r\n                <svg\r\n                    fill=\"none\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    width=\"24\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M15.88 18.12a1.25 1.25 0 0 1-1.76 1.76l-7-7a1.25 1.25 0 0 1 0-1.76l7-7a1.25 1.25 0 0 1 1.76 1.76L9.77 12z\"\r\n                        fill=\"currentColor\"></path>\r\n                </svg>\r\n                Назад\r\n            </div>\r\n        </button>\r\n    );\r\n    const BtnUp = (\r\n        <button onClick={() => window.scrollTo(0, 0)} className={styles.root}>\r\n            <div className=\"icon-center\">\r\n                <svg\r\n                    fill=\"none\"\r\n                    height=\"28\"\r\n                    viewBox=\"0 0 28 28\"\r\n                    width=\"28\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path\r\n                        d=\"M20.35 16.76a1 1 0 1 0 1.3-1.52l-7-6a1 1 0 0 0-1.3 0l-7 6a1 1 0 0 0 1.3 1.52L14 11.32z\"\r\n                        fill=\"currentColor\"></path>\r\n                </svg>\r\n            </div>\r\n        </button>\r\n    );\r\n\r\n    const [button, setButton] = React.useState(BtnBack);\r\n\r\n    const listenScrollEvent = async () => {\r\n        window.scrollY > 0 ? setButton(BtnUp) : setButton(BtnBack);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('scroll', listenScrollEvent);\r\n    });\r\n\r\n    return button;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ButtonClose_root__OHUgB\",\"closeIcon\":\"ButtonClose_closeIcon__TQ-yO\"};","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport styles from './ButtonClose.module.scss';\r\n\r\nexport const ButtonClose: React.FC = () => {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <button onClick={() => navigate(-1)} className={styles.root}>\r\n            <svg\r\n                className={styles.closeIcon}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"26px\"\r\n                height=\"26px\"\r\n                viewBox=\"0 0 26 26\"\r\n                id=\"i-close\"\r\n                fill=\"none\"\r\n                stroke=\"currentcolor\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\">\r\n                <path d=\"M2 24 L24 2 M24 24 L2 2\" />\r\n            </svg>\r\n        </button>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ArticleEditorPage_root__aQp59\",\"top\":\"ArticleEditorPage_top__Cq9LO\",\"top__author\":\"ArticleEditorPage_top__author__7HqYd\",\"author__text\":\"ArticleEditorPage_author__text__b5rNk\",\"headline\":\"ArticleEditorPage_headline__uEpRW\",\"top__labels\":\"ArticleEditorPage_top__labels__E069c\",\"labels__publish\":\"ArticleEditorPage_labels__publish__BWyfB\",\"top__right\":\"ArticleEditorPage_top__right__JisKF\"};","import Header from '@editorjs/header';\r\nimport ImageTool from '@editorjs/image';\r\nimport List from '@editorjs/list';\r\nimport Delimiter from '@editorjs/delimiter';\r\nimport Marker from '@editorjs/marker';\r\nimport InlineCode from '@editorjs/inline-code';\r\nimport Warning from '@editorjs/warning';\r\n\r\nconst Configuration = () => {\r\n    return {\r\n        /**\r\n         * Id of Element that should contain Editor instance\r\n         */\r\n\r\n        autofocus: false,\r\n        tools: {\r\n            header: {\r\n                class: Header,\r\n                required: true,\r\n                config: { placeholder: 'Заголовок', levels: [2, 3, 4], defaultLevel: 3 },\r\n            },\r\n            paragraph: {\r\n                config: { placeholder: 'Параграф' },\r\n            },\r\n            image: {\r\n                class: ImageTool,\r\n                config: {\r\n                    endpoints: {\r\n                        byFile: 'http://localhost:5000/api/upload', // Your backend file uploader endpoint\r\n                        byUrl: 'http://localhost:8008/fetchUrl', // Your endpoint that provides uploading by Url\r\n                    },\r\n                },\r\n            },\r\n            list: List,\r\n            delimiter: Delimiter,\r\n            marker: Marker,\r\n            inlineCode: InlineCode,\r\n            warning: {\r\n                class: Warning,\r\n                inlineToolbar: true,\r\n                shortcut: 'CMD+SHIFT+W',\r\n                config: {\r\n                    titlePlaceholder: 'Title',\r\n                    messagePlaceholder: 'Message',\r\n                },\r\n            },\r\n        },\r\n        data: {\r\n            blocks: [\r\n                {\r\n                    id: 'o72AO0sY-1',\r\n                    type: 'header',\r\n                    data: {\r\n                        level: 2,\r\n                    },\r\n                },\r\n                {\r\n                    id: '6LPs8gr9-a',\r\n                    type: 'paragraph',\r\n                },\r\n            ],\r\n        },\r\n        blockTunes: {\r\n            delete: {\r\n                Delete: 'Удалить',\r\n            },\r\n            moveUp: {\r\n                'Move up': 'Переместить вверх',\r\n            },\r\n            moveDown: {\r\n                'Move down': 'Переместить вниз',\r\n            },\r\n        },\r\n        i18n: {\r\n            /**\r\n             * @type {I18nDictionary}\r\n             */\r\n            messages: {\r\n                ui: {\r\n                    blockTunes: {\r\n                        toggler: {\r\n                            'Click to tune': 'Нажмите, чтобы настроить',\r\n                            'or drag to move': 'или перетащите',\r\n                        },\r\n                    },\r\n                    inlineToolbar: {\r\n                        converter: {\r\n                            'Convert to': 'Конвертировать в',\r\n                        },\r\n                    },\r\n                    toolbar: {\r\n                        toolbox: {\r\n                            Add: 'Добавить',\r\n                        },\r\n                    },\r\n                },\r\n\r\n                toolNames: {\r\n                    Text: 'Параграф',\r\n                    Heading: 'Заголовок',\r\n                    Image: 'Изображение',\r\n                    List: 'Список',\r\n                    Warning: 'Примечание',\r\n                    Checklist: 'Чеклист',\r\n                    Quote: 'Цитата',\r\n                    Code: 'Код',\r\n                    Delimiter: 'Разделитель',\r\n                    'Raw HTML': 'HTML-фрагмент',\r\n                    Table: 'Таблица',\r\n                    Link: 'Ссылка',\r\n                    Marker: 'Маркер',\r\n                    Bold: 'Полужирный',\r\n                    Italic: 'Курсив',\r\n                    InlineCode: 'Моноширинный',\r\n                },\r\n\r\n                /**\r\n                 * Section for passing translations to the external tools classes\r\n                 */\r\n                tools: {\r\n                    warning: {\r\n                        Title: 'Название',\r\n                        Message: 'Сообщение',\r\n                    },\r\n                    link: {\r\n                        'Add a link': 'Вставьте ссылку',\r\n                    },\r\n                    stub: {\r\n                        'The block can not be displayed correctly.': 'Блок не может быть отображен',\r\n                    },\r\n                },\r\n                blockTunes: {\r\n                    delete: {\r\n                        Delete: 'Удалить',\r\n                    },\r\n                    moveUp: {\r\n                        'Move up': 'Переместить вверх',\r\n                    },\r\n                    moveDown: {\r\n                        'Move down': 'Переместить вниз',\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport default Configuration;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cover\":\"CoverWindow_cover__A6Fuf\",\"cover__closeBtn\":\"CoverWindow_cover__closeBtn__goXMQ\"};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { IoClose } from 'react-icons/io5';\r\nimport { useAddCoverMutation, useDeleteCoverMutation } from '../../redux';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTrigger,\r\n    Heading,\r\n    Divider,\r\n    Content,\r\n    ButtonGroup,\r\n    IllustratedMessage,\r\n} from '@adobe/react-spectrum';\r\nimport Upload from '@spectrum-icons/illustrations/Upload';\r\n\r\nimport styles from './CoverWindow.module.scss';\r\n\r\ntype CoverWindowProps = {\r\n    windowOpen: boolean;\r\n    uploadedUrl: string;\r\n    setUploadedUrl: any;\r\n    onClickSave: any;\r\n    selectedFile: any;\r\n    setSelectedFile: any;\r\n};\r\n\r\ntype PopupClick = MouseEvent & {\r\n    path: Node[];\r\n};\r\n\r\nexport const CoverWindow: React.FC<CoverWindowProps> = ({\r\n    uploadedUrl,\r\n    setUploadedUrl,\r\n    onClickSave,\r\n    selectedFile,\r\n    setSelectedFile,\r\n}) => {\r\n    const filePicker = useRef<HTMLInputElement>(null);\r\n\r\n    const [addCover, { data, isLoading }] = useAddCoverMutation();\r\n    const [deleteCover] = useDeleteCoverMutation();\r\n\r\n    const handlePick = () => {\r\n        filePicker.current?.click();\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert('Пожалуйста выберите изображение');\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('cover', selectedFile);\r\n\r\n        addCover(formData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedFile) handleUpload();\r\n    }, [selectedFile]);\r\n\r\n    useEffect(() => {\r\n        if (data) setUploadedUrl(data.file.url);\r\n    }, [data]);\r\n\r\n    const handleChange = async (event: any) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleDeleteCover = () => {\r\n        if (selectedFile) {\r\n            setUploadedUrl('');\r\n            setSelectedFile('');\r\n            deleteCover(data.file);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <DialogTrigger>\r\n                <Button variant=\"primary\">Обложка</Button>\r\n                {(close) => (\r\n                    <Dialog>\r\n                        <Heading>Выбор обложки</Heading>\r\n                        <Divider />\r\n                        <Content maxWidth={568} height={308} width=\"100%\">\r\n                            {!selectedFile ? (\r\n                                <IllustratedMessage height={300}>\r\n                                    <button onClick={handlePick}>\r\n                                        <Upload />\r\n                                        <Heading>Нажмите, чтобы выбрать файл</Heading>\r\n                                        <input\r\n                                            ref={filePicker}\r\n                                            className=\"hidden\"\r\n                                            type=\"file\"\r\n                                            onChange={handleChange}\r\n                                            accept=\"image/jpeg,image/png,image/webp\"\r\n                                            name=\"photo\"\r\n                                        />\r\n                                        <Content>\r\n                                            Формат — JPG, WEBP, или PNG <br />\r\n                                        </Content>\r\n                                    </button>\r\n                                </IllustratedMessage>\r\n                            ) : isLoading ? (\r\n                                <div className=\"cdx-loader\"></div>\r\n                            ) : (\r\n                                <div\r\n                                    className={styles.cover}\r\n                                    style={{ backgroundImage: `url(${uploadedUrl})` }}>\r\n                                    {uploadedUrl && (\r\n                                        <button\r\n                                            onClick={handleDeleteCover}\r\n                                            className={`${styles.cover__closeBtn} icon-center`}>\r\n                                            <IoClose size={14} color=\"white\" />\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </Content>\r\n                        <ButtonGroup>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onPress={() => {\r\n                                    handleDeleteCover();\r\n                                    close();\r\n                                }}>\r\n                                Отменить\r\n                            </Button>\r\n                            <Button\r\n                                onPress={() => close()}\r\n                                isDisabled={selectedFile ? false : true}\r\n                                variant=\"cta\"\r\n                                autoFocus>\r\n                                Подтвердить\r\n                            </Button>\r\n                        </ButtonGroup>\r\n                    </Dialog>\r\n                )}\r\n            </DialogTrigger>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport EditorJS from '@editorjs/editorjs';\r\n\r\nimport { ButtonClose } from '../../components/Buttons/ButtonClose';\r\n\r\nimport styles from './ArticleEditorPage.module.scss';\r\nimport Configuration from './configuration';\r\nimport { BtnLeftFixed } from '../../components/Buttons/BtnLeftFixed';\r\nimport { useAddArticleMutation } from '../../redux';\r\nimport { CoverWindow } from '../../components/CoverWindow';\r\nimport { Button, DialogTrigger, AlertDialog } from '@adobe/react-spectrum';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { Avatar } from '../../components/Avatar';\r\n\r\nconst ArticleEditorPage = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedFile, setSelectedFile] = useState('');\r\n    const [uploadedUrl, setUploadedUrl] = useState('');\r\n\r\n    const [editor, seteditor] = useState({});\r\n\r\n    useEffect(() => {\r\n        const editor = new EditorJS(Configuration());\r\n        seteditor(editor);\r\n    }, []);\r\n\r\n    const [addArticle] = useAddArticleMutation();\r\n\r\n    const saveArticle = () => {\r\n        editor\r\n            .save()\r\n            .then((outputData) => {\r\n                delete outputData.version;\r\n                const formData = Object.assign(outputData, { cover: uploadedUrl });\r\n                addArticle(formData);\r\n                console.log('Article data: ', outputData);\r\n            })\r\n            .catch((error) => {\r\n                console.log('Saving failed: ', error);\r\n            });\r\n    };\r\n\r\n    const onClickSave = () => {\r\n        saveArticle();\r\n        navigate(-1);\r\n    };\r\n\r\n    const auth = useAuth();\r\n    const avatar = auth.user ? auth.user.avatar : '';\r\n    const userName = auth.user ? auth.user.userName : '';\r\n    return (\r\n        <div className={styles.root}>\r\n            <BtnLeftFixed />\r\n            <ButtonClose />\r\n            <div className=\"container-720\">\r\n                <div className={styles.top}>\r\n                    <div className={styles.top__author}>\r\n                        <Link to=\"/profile\">\r\n                            <Avatar imageSrc={avatar} width={46} />\r\n                        </Link>\r\n                        <div className={styles.author__text}>\r\n                            <div className={styles.headline}>{userName}</div>\r\n                            <span className={`${styles.subhead} tp-text`}>Новая статья</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.top__right}>\r\n                        <CoverWindow\r\n                            uploadedUrl={uploadedUrl}\r\n                            setUploadedUrl={setUploadedUrl}\r\n                            onClickSave={onClickSave}\r\n                            selectedFile={selectedFile}\r\n                            setSelectedFile={setSelectedFile}\r\n                        />\r\n                        <DialogTrigger>\r\n                            <Button isDisabled={selectedFile ? false : true} variant=\"cta\">\r\n                                Публикация\r\n                            </Button>\r\n                            {(close) => (\r\n                                <AlertDialog\r\n                                    width=\"auto\"\r\n                                    maxWidth={1200}\r\n                                    variant=\"confirmation\"\r\n                                    title=\"Подтвердить публикацию\"\r\n                                    primaryActionLabel=\"Опубликовать\"\r\n                                    secondaryActionLabel=\"Сохранить как черновик\"\r\n                                    cancelLabel=\"Отмена\"\r\n                                    onPrimaryAction={onClickSave}>\r\n                                    Вы уверены, что хотите опубликовать новую статью?\r\n                                </AlertDialog>\r\n                            )}\r\n                        </DialogTrigger>\r\n                    </div>\r\n                </div>\r\n                <div id=\"editorjs\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ArticleEditorPage;\r\n"],"names":["BtnLeftFixed","navigate","useNavigate","BtnBack","onClick","className","styles","fill","height","viewBox","width","xmlns","d","BtnUp","window","scrollTo","React","button","setButton","listenScrollEvent","scrollY","addEventListener","ButtonClose","id","stroke","strokeLinecap","strokeLinejoin","strokeWidth","autofocus","tools","header","class","Header","required","config","placeholder","levels","defaultLevel","paragraph","image","ImageTool","endpoints","byFile","byUrl","list","List","delimiter","Delimiter","marker","Marker","inlineCode","InlineCode","warning","Warning","inlineToolbar","shortcut","titlePlaceholder","messagePlaceholder","data","blocks","type","level","blockTunes","delete","Delete","moveUp","moveDown","i18n","messages","ui","toggler","converter","toolbar","toolbox","Add","toolNames","Text","Heading","Image","Checklist","Quote","Code","Table","Link","Bold","Italic","Title","Message","link","stub","CoverWindow","uploadedUrl","setUploadedUrl","selectedFile","onClickSave","setSelectedFile","filePicker","useRef","useAddCoverMutation","addCover","isLoading","useDeleteCoverMutation","deleteCover","handlePick","current","click","handleUpload","alert","formData","FormData","append","useEffect","file","url","handleChange","event","target","files","handleDeleteCover","variant","close","maxWidth","style","backgroundImage","size","color","I","Upload","ref","onChange","accept","name","onPress","isDisabled","autoFocus","useState","editor","seteditor","EditorJS","Configuration","useAddArticleMutation","addArticle","save","then","outputData","version","Object","assign","cover","console","log","catch","error","auth","useAuth","avatar","user","userName","to","Avatar","imageSrc","title","primaryActionLabel","secondaryActionLabel","cancelLabel","onPrimaryAction"],"sourceRoot":""}
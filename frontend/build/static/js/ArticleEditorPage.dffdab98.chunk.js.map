{"version":3,"file":"static/js/ArticleEditorPage.dffdab98.chunk.js","mappings":"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","sources":["pages/ArticleEditorPage/EditorJs/i18n.ts","pages/ArticleEditorPage/EditorJs/tools.js","pages/ArticleEditorPage/DraftInfoDialog.tsx","webpack://client/./src/pages/ArticleEditorPage/ConfirmDialog/TagsInput.module.scss?4c74","pages/ArticleEditorPage/ConfirmDialog/TagsInput.tsx","pages/ArticleEditorPage/ConfirmDialog/ListBox.tsx","webpack://client/./src/pages/ArticleEditorPage/ConfirmDialog/ConfirmDialog.module.scss?d11e","pages/ArticleEditorPage/ConfirmDialog/ConfirmButton.tsx","pages/ArticleEditorPage/ConfirmDialog/ConfirmDialog.tsx","webpack://client/./src/pages/ArticleEditorPage/ArticleEditorPage.module.scss?eedc","pages/ArticleEditorPage/index.tsx","webpack://client/./src/pages/NotFound/NotFound.module.scss?09e2","pages/NotFound/index.tsx"],"sourcesContent":["export const i18n = {\r\n    /**\r\n     * @type {I18nDictionary}\r\n     */\r\n    messages: {\r\n        ui: {\r\n            blockTunes: {\r\n                toggler: {\r\n                    'Click to tune': 'Нажмите, чтобы настроить',\r\n                    'or drag to move': 'или перетащите',\r\n                },\r\n            },\r\n            inlineToolbar: {\r\n                converter: {\r\n                    'Convert to': 'Конвертировать в',\r\n                },\r\n            },\r\n            toolbar: {\r\n                toolbox: {\r\n                    Add: 'Добавить',\r\n                },\r\n            },\r\n        },\r\n\r\n        toolNames: {\r\n            Text: 'Параграф',\r\n            Heading: 'Заголовок',\r\n            Image: 'Изображение',\r\n            List: 'Список',\r\n            Warning: 'Примечание',\r\n            Checklist: 'Чеклист',\r\n            Quote: 'Цитата',\r\n            Code: 'Код',\r\n            Delimiter: 'Разделитель',\r\n            'Raw HTML': 'HTML-фрагмент',\r\n            Table: 'Таблица',\r\n            Link: 'Ссылка',\r\n            Marker: 'Маркер',\r\n            Bold: 'Полужирный',\r\n            Italic: 'Курсив',\r\n            InlineCode: 'Моноширинный',\r\n        },\r\n\r\n        /**\r\n         * Section for passing translations to the external tools classes\r\n         */\r\n        tools: {\r\n            warning: {\r\n                Title: 'Название',\r\n                Message: 'Сообщение',\r\n            },\r\n            link: {\r\n                'Add a link': 'Вставьте ссылку',\r\n            },\r\n            stub: {\r\n                'The block can not be displayed correctly.': 'Блок не может быть отображен',\r\n            },\r\n        },\r\n        blockTunes: {\r\n            delete: {\r\n                Delete: 'Удалить',\r\n            },\r\n            moveUp: {\r\n                'Move up': 'Переместить вверх',\r\n            },\r\n            moveDown: {\r\n                'Move down': 'Переместить вниз',\r\n            },\r\n        },\r\n    },\r\n};\r\n","import Header from '@editorjs/header';\r\nimport ImageTool from '@editorjs/image';\r\nimport List from '@editorjs/list';\r\nimport Delimiter from '@editorjs/delimiter';\r\nimport Marker from '@editorjs/marker';\r\nimport InlineCode from '@editorjs/inline-code';\r\nimport Warning from '@editorjs/warning';\r\nimport customBlock from '../customBlock';\r\n\r\nexport const EDITOR_JS_TOOLS = {\r\n    header: {\r\n        class: Header,\r\n        config: { levels: [3, 4], defaultLevel: 3 },\r\n    },\r\n\r\n    image: {\r\n        class: ImageTool,\r\n        config: {\r\n            endpoints: {\r\n                byFile: `${process.env.REACT_APP_API_URL}/upload`, // Your backend file uploader endpoint\r\n                byUrl: 'http://localhost:8008/fetchUrl', // Your endpoint that provides uploading by Url\r\n            },\r\n        },\r\n    },\r\n    list: List,\r\n    delimiter: Delimiter,\r\n    marker: Marker,\r\n    inlineCode: InlineCode,\r\n    warning: {\r\n        class: Warning,\r\n        inlineToolbar: true,\r\n        shortcut: 'CMD+SHIFT+W',\r\n        config: {\r\n            titlePlaceholder: 'Title',\r\n            messagePlaceholder: 'Message',\r\n        },\r\n    },\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useMediaPredicate } from 'react-media-hook';\r\nimport { ActionDialog, Button } from '../../components';\r\nimport { useAddArticleMutation } from '../../redux';\r\nimport { useArticle } from '../../hooks';\r\n\r\ninterface DraftInfoDialogProps {\r\n    setFormStatus: (value: React.SetStateAction<'unchanged' | 'modified' | 'saved'>) => void;\r\n}\r\n\r\nexport const DraftInfoDialog: React.FC<DraftInfoDialogProps> = ({ setFormStatus }) => {\r\n    const [isOpen, setOpen] = useState<boolean>(false);\r\n\r\n    const { mutableArticle } = useArticle();\r\n    const [addArticle, { isLoading, isSuccess, isError }] = useAddArticleMutation();\r\n\r\n    const saveDraft = async () => {\r\n        const formData = Object.assign({ intent: 'draft' }, mutableArticle);\r\n        addArticle(formData);\r\n        setFormStatus('saved');\r\n    };\r\n\r\n    const onClickButton = () => {\r\n        saveDraft();\r\n        setOpen(true);\r\n    };\r\n\r\n    const isMobile = useMediaPredicate('(max-width: 551px)');\r\n\r\n    return (\r\n        <>\r\n            {isMobile ? (\r\n                <Button\r\n                    onClick={onClickButton}\r\n                    isLoading={isLoading}\r\n                    disabled={isLoading || !mutableArticle.title}\r\n                    variant=\"filledTonal\">\r\n                    <span className=\"material-symbols-outlined\">save_as</span> Черновик\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                    onClick={onClickButton}\r\n                    isLoading={isLoading}\r\n                    disabled={isLoading || !mutableArticle.title}\r\n                    variant=\"filledTonal\">\r\n                    Сохранить как черновик\r\n                </Button>\r\n            )}\r\n            <ActionDialog\r\n                isOpen={isOpen}\r\n                setIsOpen={setOpen}\r\n                actionText={\r\n                    isSuccess ? 'Черновик сохранен' : isError ? 'Не удалось сохранить черновик' : ''\r\n                }\r\n            />\r\n        </>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"TagsInput_root__98Dtx\",\"label\":\"TagsInput_label__Z1TEL\",\"tagsInput\":\"TagsInput_tagsInput__ik-Jt\",\"tagsList\":\"TagsInput_tagsList__wN3Ik\",\"tag\":\"TagsInput_tag__uw9O2\",\"tagTitle\":\"TagsInput_tagTitle__gvAvl\",\"tagCloseButton\":\"TagsInput_tagCloseButton__y0MND\"};","import { setTags } from '../../../redux';\r\nimport { useAppDispatch, useArticle } from '../../../hooks';\r\n\r\nimport styles from './TagsInput.module.scss';\r\n\r\nexport const TagsInput = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { mutableArticle } = useArticle();\r\n\r\n    const removeTags = (indexToRemove: number) => {\r\n        dispatch(setTags([...mutableArticle?.tags.filter((_, index) => index !== indexToRemove)]));\r\n    };\r\n    const addTags = (event: any) => {\r\n        if (event.target.value !== '') {\r\n            dispatch(setTags([...mutableArticle?.tags, event.target.value]));\r\n            event.target.value = '';\r\n        }\r\n    };\r\n    return (\r\n        <div className={styles.root}>\r\n            <div className={styles.tagsInput}>\r\n                <ul className={styles.tagsList}>\r\n                    {mutableArticle?.tags?.map((tag, index) => (\r\n                        <li key={index} className={styles.tag}>\r\n                            <span className={styles.tagTitle}>{tag}</span>\r\n                            <button\r\n                                className={styles.tagCloseButton}\r\n                                onClick={() => removeTags(index)}>\r\n                                <span className=\"material-symbols-outlined\">cancel</span>\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    onKeyUp={(event) => (event.key === 'Enter' ? addTags(event) : null)}\r\n                    placeholder=\"Добавь теги\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Listbox } from '@headlessui/react';\r\nimport { useState } from 'react';\r\nimport { useAppDispatch, useArticle } from '../../../hooks';\r\nimport { setArticleCategory } from '../../../redux';\r\n\r\nconst categories = [\r\n    { name: 'Обзоры', key: 'reviews' },\r\n    { name: 'Прохождения', key: 'solutions' },\r\n    { name: 'Отзывы', key: 'mentions' },\r\n];\r\n\r\nexport const ListBoxPicker = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { mutableArticle } = useArticle();\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(mutableArticle?.category || {});\r\n\r\n    console.log(selectedCategory);\r\n\r\n    return (\r\n        <Listbox value={selectedCategory} onChange={setSelectedCategory}>\r\n            <div className=\"listBox\">\r\n                <Listbox.Button placeholder=\"Выбери категорию\" className=\"listBoxButton\">\r\n                    {selectedCategory.name}\r\n                    <span className=\"material-symbols-outlined\">unfold_more</span>\r\n                </Listbox.Button>\r\n                <Listbox.Options className=\"listBoxOptions\">\r\n                    {categories.map((category) => (\r\n                        <Listbox.Option\r\n                            className=\"listBoxOption\"\r\n                            onClick={() => dispatch(setArticleCategory(category))}\r\n                            key={category.key}\r\n                            value={category}>\r\n                            {({ active, selected }) => (\r\n                                <div\r\n                                    className={`${selected && 'selected'}\r\n                                    optionContent\r\n                                    `}>\r\n                                    {selected && (\r\n                                        <span className=\"material-symbols-outlined\">check</span>\r\n                                    )}{' '}\r\n                                    {category.name}\r\n                                </div>\r\n                            )}\r\n                        </Listbox.Option>\r\n                    ))}\r\n                </Listbox.Options>\r\n            </div>\r\n        </Listbox>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"plateContent\":\"ConfirmDialog_plateContent__P6c5G\",\"itemHeadline\":\"ConfirmDialog_itemHeadline__-50Ki\",\"buttonGroup\":\"ConfirmDialog_buttonGroup__gBO8W\",\"buttonGroupConfirm\":\"ConfirmDialog_buttonGroupConfirm__rlEzy\"};","import { useEffect, useState } from 'react';\r\nimport { useMediaPredicate } from 'react-media-hook';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ActionDialog, Button } from '../../../components';\r\nimport { useArticle } from '../../../hooks';\r\nimport { useAddArticleMutation, useEditArticleMutation } from '../../../redux';\r\n\r\ninterface ConfirmButtonProps {\r\n    mode: 'isNew' | 'isEditing' | 'isDraft';\r\n}\r\n\r\nexport const ConfirmButton = ({ mode }: ConfirmButtonProps) => {\r\n    const navigate = useNavigate();\r\n\r\n    const { mutableArticle } = useArticle();\r\n\r\n    const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n    const [addArticle, { isLoading, isSuccess, isError }] = useAddArticleMutation();\r\n    const [editArticle] = useEditArticleMutation();\r\n\r\n    const isMobile = useMediaPredicate('(max-width: 551px)');\r\n\r\n    const saveArticle = async () => {\r\n        const formData = Object.assign(\r\n            {\r\n                saveFromDraft: mode === 'isDraft',\r\n                draftId: mode === 'isDraft' && mutableArticle._id,\r\n            },\r\n            { intent: 'publish' },\r\n            mutableArticle,\r\n        );\r\n        mode === 'isEditing'\r\n            ? editArticle({ formData, id: mutableArticle._id })\r\n            : addArticle(formData);\r\n    };\r\n\r\n    const onClickSave = async () => {\r\n        await saveArticle();\r\n        setIsOpen(true);\r\n\r\n        if (!isLoading) {\r\n            if (!isError) {\r\n                navigate(-1);\r\n            }\r\n        }\r\n\r\n        setTimeout(() => setIsOpen(false), 5000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ActionDialog\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                actionText={\r\n                    isSuccess\r\n                        ? 'Статья опубликована'\r\n                        : isError\r\n                        ? 'Не удалось опубликовать статью'\r\n                        : ''\r\n                }\r\n            />\r\n            <Button\r\n                isLoading={isLoading}\r\n                disabled={isLoading || !(mutableArticle.category && mutableArticle?.cover)}\r\n                onClick={onClickSave}\r\n                variant=\"filled\">\r\n                {mode === 'isEditing'\r\n                    ? isMobile\r\n                        ? 'Обновить'\r\n                        : 'Обновить статью'\r\n                    : 'Опубликовать'}\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useMediaPredicate } from 'react-media-hook';\r\nimport { DraftInfoDialog } from '../DraftInfoDialog';\r\nimport { TagsInput } from './TagsInput';\r\nimport { useArticle } from '../../../hooks';\r\nimport { Button, CoverWindow, DialogTrigger as MyDialogTrigger } from '../../../components';\r\nimport { ListBoxPicker } from './ListBox';\r\n\r\nimport styles from './ConfirmDialog.module.scss';\r\nimport { ConfirmButton } from './ConfirmButton';\r\n\r\ninterface ConfirmDialogProps {\r\n    mode: 'isNew' | 'isEditing' | 'isDraft';\r\n    setFormStatus: (value: React.SetStateAction<'unchanged' | 'modified' | 'saved'>) => void;\r\n}\r\n\r\nexport const ConfirmDialog: React.FC<ConfirmDialogProps> = ({ mode, setFormStatus }) => {\r\n    const { mutableArticle } = useArticle();\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState<File | undefined>(undefined);\r\n\r\n    const isMobile = useMediaPredicate('(max-width: 551px)');\r\n    const isMobileSmall = useMediaPredicate('(max-width: 397px)');\r\n\r\n    return (\r\n        <>\r\n            {' '}\r\n            <Button\r\n                onClick={() => setIsOpen(true)}\r\n                disabled={!mutableArticle.title}\r\n                variant=\"filled\">\r\n                Продолжить\r\n            </Button>\r\n            <MyDialogTrigger title=\"Последние штрихи\" isOpen={isOpen} setIsOpen={setIsOpen}>\r\n                <div className={styles.plateContent}>\r\n                    <div>\r\n                        <div className={styles.itemHeadline}>Обложка *</div>\r\n                        <CoverWindow\r\n                            selectedFile={selectedFile}\r\n                            setSelectedFile={setSelectedFile}\r\n                            mode={mode}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <div className={styles.itemHeadline}>Категория *</div>\r\n                        <ListBoxPicker />\r\n                    </div>\r\n                    <div>\r\n                        <div className={styles.itemHeadline}>Теги</div>\r\n                        <TagsInput />\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonGroup}>\r\n                    {isMobile ? (\r\n                        <Button onClick={() => setIsOpen(false)} icon variant=\"outlined\">\r\n                            <span className=\"material-symbols-outlined\">undo</span>\r\n                        </Button>\r\n                    ) : (\r\n                        <Button onClick={() => setIsOpen(false)} variant=\"outlined\">\r\n                            Отмена\r\n                        </Button>\r\n                    )}\r\n                    <div className={styles.buttonGroupConfirm}>\r\n                        <DraftInfoDialog setFormStatus={setFormStatus} />\r\n                        <ConfirmButton mode={mode} />\r\n                    </div>\r\n                </div>\r\n            </MyDialogTrigger>\r\n        </>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ArticleEditorPage_root__mqbsP\",\"top_bar\":\"ArticleEditorPage_top_bar__KsrDR\",\"barRightButtons\":\"ArticleEditorPage_barRightButtons__kfDHy\",\"container\":\"ArticleEditorPage_container__Qv0LR\",\"textarea__wrapper\":\"ArticleEditorPage_textarea__wrapper__Eg3+2\",\"writingHeader\":\"ArticleEditorPage_writingHeader__w8Tz8\"};","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { createReactEditorJS } from 'react-editor-js';\r\nimport { Button, Overlay } from '../../components';\r\nimport {\r\n    resetMutableArticle,\r\n    setBlocks,\r\n    setTitle,\r\n    useAddArticleMutation,\r\n    useEditArticleMutation,\r\n    useGetMutableArticleQuery,\r\n} from '../../redux';\r\nimport { i18n, EDITOR_JS_TOOLS } from './EditorJs';\r\nimport debounce from 'lodash.debounce';\r\nimport NotFoundPage from '../NotFound';\r\nimport { useArticle, useDocTitle, useAppDispatch } from '../../hooks';\r\nimport { useMediaPredicate } from 'react-media-hook';\r\nimport { resizeTextareaHeight } from '../../helpers';\r\nimport { ConfirmDialog } from './ConfirmDialog/ConfirmDialog';\r\nimport { DraftInfoDialog } from './DraftInfoDialog';\r\n\r\nimport styles from './ArticleEditorPage.module.scss';\r\n\r\nconst ArticleEditorPage = () => {\r\n    const location = useLocation();\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n    const fromPage = location?.state?.from?.pathname;\r\n    const { id } = useParams();\r\n\r\n    const isDraft = Boolean(location.pathname.split('/')[1] === 'drafts');\r\n    const isEditing = isDraft ? false : Boolean(id);\r\n    const [mode, setMode] = useState<'isNew' | 'isEditing' | 'isDraft'>(\r\n        isDraft ? 'isDraft' : isEditing ? 'isEditing' : 'isNew',\r\n    );\r\n    useDocTitle(mode === 'isNew' || 'isDraft' ? 'Новая статья' : 'Изменение статьи');\r\n    const { mutableArticle } = useArticle();\r\n\r\n    const editorCore = useRef<any>(null);\r\n    const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n    const [formStatus, setFormStatus] = useState<'unchanged' | 'modified' | 'saved'>('unchanged');\r\n\r\n    const { data, isLoading, isError } = useGetMutableArticleQuery(id, {\r\n        skip: mode === 'isNew',\r\n        refetchOnMountOrArgChange: true,\r\n    });\r\n\r\n    const isMobile = useMediaPredicate('(max-width: 768px)');\r\n\r\n    const ReactEditorJS = createReactEditorJS();\r\n\r\n    useEffect(() => {\r\n        if (location.pathname.split('/')[2] === 'new') {\r\n            setMode('isNew');\r\n            dispatch(\r\n                resetMutableArticle({\r\n                    _id: '',\r\n                    title: '',\r\n                    cover: '',\r\n                    blocks: [],\r\n                    tags: [],\r\n                }),\r\n            );\r\n\r\n            if (textareaRef.current) {\r\n                textareaRef.current.value = '';\r\n            }\r\n        }\r\n    }, [mode, location, dispatch, data]);\r\n\r\n    useEffect(() => {\r\n        const handler = (event: BeforeUnloadEvent) => {\r\n            event.preventDefault();\r\n            event.returnValue = '';\r\n        };\r\n\r\n        if (formStatus === 'modified') {\r\n            window.addEventListener('beforeunload', handler);\r\n\r\n            return () => {\r\n                window.removeEventListener('beforeunload', handler);\r\n            };\r\n        }\r\n\r\n        return () => {};\r\n    }, [formStatus]);\r\n\r\n    const handleInitialize = useCallback((instance: any) => {\r\n        editorCore.current = instance;\r\n    }, []);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        const savedData = await editorCore.current?.save();\r\n        dispatch(setBlocks(savedData));\r\n    }, [dispatch]);\r\n\r\n    const autoSave = useCallback(\r\n        debounce(() => {\r\n            handleSave();\r\n        }, 150),\r\n        [],\r\n    );\r\n\r\n    if (isLoading) return <Overlay />;\r\n    if (isError && mode === 'isEditing') return <NotFoundPage />;\r\n\r\n    resizeTextareaHeight();\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            <div className={styles.top_bar}>\r\n                <Button\r\n                    onClick={() =>\r\n                        navigate(fromPage && fromPage !== location.pathname ? fromPage : '/')\r\n                    }\r\n                    variant=\"outlined\">\r\n                    Отмена\r\n                </Button>\r\n                <div className={styles.barRightButtons}>\r\n                    {!isEditing && <DraftInfoDialog setFormStatus={setFormStatus} />}\r\n                    <ConfirmDialog mode={mode} setFormStatus={setFormStatus} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.container}>\r\n                <form\r\n                    onChange={(e) => {\r\n                        if (mutableArticle?.title !== '') {\r\n                            setFormStatus('modified');\r\n                        } else {\r\n                            setFormStatus('unchanged');\r\n                        }\r\n                    }}>\r\n                    <div className={styles.textarea__wrapper}>\r\n                        <textarea\r\n                            ref={textareaRef}\r\n                            maxLength={68}\r\n                            autoFocus={true}\r\n                            placeholder={\r\n                                isMobile ? 'Дай мне имя' : 'Как корабль назовёшь так он и поплывёт'\r\n                            }\r\n                            className={styles.writingHeader}\r\n                            value={mutableArticle?.title}\r\n                            onChange={(e) => dispatch(setTitle(e.target.value))}\r\n                            style={{ height: 42 }}\r\n                        />\r\n                    </div>\r\n                    {(isEditing || isDraft) && mutableArticle?.blocks ? (\r\n                        <ReactEditorJS\r\n                            onInitialize={handleInitialize}\r\n                            placeholder=\"Давай напишем классную статью!\"\r\n                            defaultValue={{\r\n                                blocks: mutableArticle?.blocks,\r\n                            }}\r\n                            tools={EDITOR_JS_TOOLS}\r\n                            i18n={i18n}\r\n                            onChange={autoSave}\r\n                        />\r\n                    ) : (\r\n                        mode === 'isNew' && (\r\n                            <ReactEditorJS\r\n                                onInitialize={handleInitialize}\r\n                                placeholder=\"Давай напишем классную статью!\"\r\n                                tools={EDITOR_JS_TOOLS}\r\n                                i18n={i18n}\r\n                                onChange={autoSave}\r\n                            />\r\n                        )\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ArticleEditorPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"NotFound_root__nh4fq\",\"content\":\"NotFound_content__Yldim\",\"headline\":\"NotFound_headline__CbQUR\"};","import { useNavigate } from 'react-router-dom';\r\nimport { Button } from '../../components';\r\n\r\nimport notFoundImage from '../../assets/img/404-computer.png';\r\n\r\nimport styles from './NotFound.module.scss';\r\n\r\nconst NotFoundPage = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <div className={styles.root}>\r\n            <div className={styles.content}>\r\n                <img src={notFoundImage} alt=\"Не найдено\" />\r\n                <h4 className={styles.headline}>404 Not Found</h4>\r\n                <p>Упс! Эта страница не существует.</p>\r\n                <Button onClick={() => navigate('/')} variant=\"filledTonal\">\r\n                    Вернуться домой\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"names":["i18n","messages","ui","blockTunes","toggler","inlineToolbar","converter","toolbar","toolbox","Add","toolNames","Text","Heading","Image","List","Warning","Checklist","Quote","Code","Delimiter","Table","Link","Marker","Bold","Italic","InlineCode","tools","warning","Title","Message","link","stub","delete","Delete","moveUp","moveDown","EDITOR_JS_TOOLS","header","class","Header","config","levels","defaultLevel","image","ImageTool","endpoints","byFile","process","byUrl","list","delimiter","marker","inlineCode","shortcut","titlePlaceholder","messagePlaceholder","DraftInfoDialog","setFormStatus","useState","isOpen","setOpen","mutableArticle","useArticle","useAddArticleMutation","addArticle","isLoading","isSuccess","isError","saveDraft","formData","Object","assign","intent","onClickButton","isMobile","useMediaPredicate","onClick","disabled","title","variant","className","setIsOpen","actionText","TagsInput","dispatch","useAppDispatch","styles","tags","map","tag","index","indexToRemove","setTags","filter","_","type","onKeyUp","event","key","target","value","addTags","placeholder","categories","name","ListBoxPicker","category","selectedCategory","setSelectedCategory","console","log","onChange","setArticleCategory","active","selected","ConfirmButton","mode","navigate","useNavigate","useEditArticleMutation","editArticle","saveArticle","saveFromDraft","draftId","_id","id","onClickSave","setTimeout","cover","ConfirmDialog","undefined","selectedFile","setSelectedFile","icon","location","useLocation","fromPage","state","from","pathname","useParams","isDraft","Boolean","split","isEditing","setMode","useDocTitle","editorCore","useRef","textareaRef","formStatus","useGetMutableArticleQuery","skip","refetchOnMountOrArgChange","data","ReactEditorJS","createReactEditorJS","useEffect","resetMutableArticle","blocks","current","handler","preventDefault","returnValue","window","addEventListener","removeEventListener","handleInitialize","useCallback","instance","handleSave","save","savedData","setBlocks","autoSave","debounce","NotFound","resizeTextareaHeight","e","ref","maxLength","autoFocus","setTitle","style","height","onInitialize","defaultValue","src","notFoundImage","alt"],"sourceRoot":""}
{"version":3,"file":"static/js/Signup.f600a152.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Buttons/Button/Button.module.scss?b48e","components/Buttons/Button/index.tsx","webpack://client/./src/components/Buttons/VisibilityToggle/VisibilityToggle.module.scss?ba7b","components/Buttons/VisibilityToggle/index.tsx","webpack://client/./src/components/Canvas/Canvas.module.scss?d693","components/Canvas/index.tsx","webpack://client/./src/components/CardLayout/CardLayout.module.scss?8f64","components/CardLayout/index.tsx","assets/img/social/google.svg","webpack://client/./src/pages/Signup/Signup.module.scss?1596","pages/Signup/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Button_root__Nuui8\"};","import React from 'react';\r\nimport { CircleLoader, MoonLoader } from 'react-spinners';\r\n\r\nimport styles from './Button.module.scss';\r\n\r\nexport interface ButtonProps {\r\n    children: string;\r\n    spinner?: boolean;\r\n    disabled?: boolean;\r\n    onClick?: any;\r\n    variant: string;\r\n}\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n    spinner,\r\n    disabled,\r\n    children,\r\n    onClick,\r\n    variant,\r\n}) => {\r\n    return (\r\n        <button onClick={onClick} disabled={disabled} className={`${styles.root} ${variant}`}>\r\n            {spinner && <CircleLoader color=\"#1472e6\" size={16} />}\r\n            <span>{children}</span>\r\n        </button>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VisibilityToggle_root__Fbgd+\"};","import React from 'react';\r\n\r\nimport styles from './VisibilityToggle.module.scss';\r\n\r\ntype VisibilityToggleProps = {\r\n    passwordEye: boolean;\r\n    setPasswordEye: any;\r\n    style?: any;\r\n};\r\n\r\nexport const VisibilityToggle: React.FC<VisibilityToggleProps> = ({\r\n    passwordEye,\r\n    setPasswordEye,\r\n    style,\r\n}) => {\r\n    return (\r\n        <div\r\n            onClick={() => setPasswordEye(!passwordEye)}\r\n            className={`${styles.root} icon-center`}\r\n            style={style}>\r\n            {passwordEye ? (\r\n                <svg viewBox=\"0 0 36 36\" focusable=\"false\" aria-hidden=\"true\" role=\"img\">\r\n                    <path d=\"M24.613 8.58A14.972 14.972 0 0 0 18 6.937c-8.664 0-15.75 8.625-15.75 11.423 0 3 7.458 10.7 15.686 10.7 8.3 0 15.814-7.706 15.814-10.7 0-2.36-4.214-7.341-9.137-9.78zM18 27.225A9.225 9.225 0 1 1 27.225 18 9.225 9.225 0 0 1 18 27.225z\"></path>\r\n                    <path d=\"M20.667 18.083A2.667 2.667 0 0 1 18 15.417a2.632 2.632 0 0 1 1.35-2.27 4.939 4.939 0 0 0-1.35-.209A5.063 5.063 0 1 0 23.063 18a4.713 4.713 0 0 0-.175-1.2 2.625 2.625 0 0 1-2.221 1.283z\"></path>\r\n                </svg>\r\n            ) : (\r\n                <svg viewBox=\"0 0 36 36\" role=\"img\">\r\n                    <path d=\"M14.573 9.44A9.215 9.215 0 0 1 26.56 21.427l2.945 2.945c2.595-2.189 4.245-4.612 4.245-6.012 0-2.364-4.214-7.341-9.137-9.78A14.972 14.972 0 0 0 18 6.937a14.36 14.36 0 0 0-4.989.941z\"></path>\r\n                    <path d=\"M33.794 32.058L22.328 20.592A5.022 5.022 0 0 0 23.062 18a4.712 4.712 0 0 0-.174-1.2 2.625 2.625 0 0 1-2.221 1.278A2.667 2.667 0 0 1 18 15.417a2.632 2.632 0 0 1 1.35-2.27 4.945 4.945 0 0 0-1.35-.209 5.022 5.022 0 0 0-2.592.734L3.942 2.206a.819.819 0 0 0-1.157 0l-.578.579a.817.817 0 0 0 0 1.157l6.346 6.346c-3.816 2.74-6.3 6.418-6.3 8.072 0 3 7.458 10.7 15.686 10.7a16.455 16.455 0 0 0 7.444-1.948l6.679 6.679a.817.817 0 0 0 1.157 0l.578-.578a.818.818 0 0 0-.003-1.155zM18 27.225a9.2 9.2 0 0 1-7.321-14.811l2.994 2.994A5.008 5.008 0 0 0 12.938 18 5.062 5.062 0 0 0 18 23.063a5.009 5.009 0 0 0 2.592-.736l2.994 2.994A9.144 9.144 0 0 1 18 27.225z\"></path>\r\n                </svg>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Canvas_root__Z0E2F\",\"background\":\"Canvas_background__9muiV\",\"inner\":\"Canvas_inner__wLXG3\",\"logoAndSpan\":\"Canvas_logoAndSpan__cBaD2\",\"logo\":\"Canvas_logo__AbpYy\",\"panel\":\"Canvas_panel__GGeTg\"};","import React from 'react';\r\n\r\nimport logo from '../../assets/img/logo.png';\r\n\r\nimport styles from './Canvas.module.scss';\r\n\r\ntype CanvasProps = {\r\n    children: any;\r\n};\r\n\r\nconst Canvas: React.FC<CanvasProps> = ({ children }) => {\r\n    return (\r\n        <div className={styles.root}>\r\n            <section className={styles.background}>\r\n                <div className={styles.inner}>\r\n                    <div className={styles.logoAndSpan}>\r\n                        <img className={styles.logo} src={logo} alt=\"Logo\" />\r\n                        <p>Войдите или создайте учетную запись</p>\r\n                    </div>\r\n                    <div className={`${styles.item} ${styles.panel}`}>{children}</div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Canvas;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardLayout__container\":\"CardLayout_cardLayout__container__cOLDA\",\"root\":\"CardLayout_root__NqyUw\",\"header\":\"CardLayout_header__hhCnE\",\"content\":\"CardLayout_content__oxemA\"};","import React from 'react';\r\n\r\nimport styles from './CardLayout.module.scss';\r\n\r\ntype CardLayoutProps = {\r\n    children: any;\r\n    headline: string;\r\n    toaster?: boolean;\r\n};\r\n\r\nconst CardLayout: React.FC<CardLayoutProps> = ({ children, headline, toaster }) => {\r\n    return (\r\n        <div className={styles.cardLayout__container}>\r\n            <div\r\n                style={\r\n                    toaster\r\n                        ? { borderTopLeftRadius: 0, borderTopRightRadius: 0 }\r\n                        : { borderRadius: 8 }\r\n                }\r\n                className={styles.root}>\r\n                <header className={styles.header}>\r\n                    <h2>{headline}</h2>\r\n                </header>\r\n                <section className={styles.content}>{children}</section>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardLayout;\r\n","var _rect, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGoogle(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Button_-_Google\",\n    \"data-name\": \"Button - Google\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 50,\n    height: 50,\n    viewBox: \"0 0 50 50\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Background\",\n    width: 50,\n    height: 50,\n    rx: 25,\n    fill: \"#fff\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_69890\",\n    \"data-name\": \"Group 69890\",\n    transform: \"translate(13 10.771)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"logo_googleg_48dp\",\n    transform: \"translate(0 2.228)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Shape\",\n    d: \"M20.52,9.818A13.788,13.788,0,0,0,20.3,7.364H9v4.642h6.458a5.52,5.52,0,0,1-2.395,3.622v3.011h3.878a11.7,11.7,0,0,0,3.578-8.82Z\",\n    transform: \"translate(3 2.455)\",\n    fill: \"#4285f4\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Shape-2\",\n    \"data-name\": \"Shape\",\n    d: \"M11.681,20.43a11.456,11.456,0,0,0,7.942-2.907l-3.878-3.011a7.24,7.24,0,0,1-10.778-3.8H.957v3.109A12,12,0,0,0,11.681,20.43Z\",\n    transform: \"translate(0.319 3.57)\",\n    fill: \"#34a853\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Shape-3\",\n    \"data-name\": \"Shape\",\n    d: \"M5.285,12.627a7.094,7.094,0,0,1,0-4.56V4.958H1.276a12.015,12.015,0,0,0,0,10.778l4.009-3.109Z\",\n    transform: \"translate(0 1.653)\",\n    fill: \"#fbbc05\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Shape-4\",\n    \"data-name\": \"Shape\",\n    d: \"M11.681,4.773a6.483,6.483,0,0,1,4.587,1.795L19.71,3.125A11.533,11.533,0,0,0,11.681,0,12,12,0,0,0,.957,6.611L4.966,9.72a7.152,7.152,0,0,1,6.715-4.947Z\",\n    transform: \"translate(0.319)\",\n    fill: \"#ea4335\",\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Shape-5\",\n    \"data-name\": \"Shape\",\n    d: \"M0,0H24V24H0Z\",\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGoogle);\nexport default __webpack_public_path__ + \"static/media/google.7530a8d58bf2915d5852712098d7575f.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Signup_root__NQJAi\",\"social__buttons\":\"Signup_social__buttons__Q2DQT\",\"social__button\":\"Signup_social__button__al+2z\",\"googleIcon\":\"Signup_googleIcon__FbJmG\",\"socials__separator\":\"Signup_socials__separator__BjJps\",\"instructions\":\"Signup_instructions__-WSwY\",\"fields\":\"Signup_fields__eHV+Y\",\"name\":\"Signup_name__L6Q-e\",\"field\":\"Signup_field__Q-tNd\",\"password__field\":\"Signup_password__field__zTTAq\",\"submit\":\"Signup_submit__3F1KD\"};","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { VisibilityToggle } from '../../components/Buttons/VisibilityToggle';\r\nimport Canvas from '../../components/Canvas';\r\nimport CardLayout from '../../components/CardLayout';\r\n\r\nimport googleIcon from '../../assets/img/social/google.svg';\r\nimport facebookIcon from '../../assets/img/social/f_logo_RGB-Blue_58.png';\r\n\r\nimport styles from './Signup.module.scss';\r\nimport { useSignupMutation } from '../../redux/services/auth';\r\nimport { Button } from '../../components/Buttons/Button';\r\n\r\nconst Signup = () => {\r\n    const navigate = useNavigate();\r\n    const [signup, { isLoading, isError, error }] = useSignupMutation();\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isValidating, isValid, isDirty },\r\n        handleSubmit,\r\n    } = useForm({\r\n        mode: 'onSubmit',\r\n    });\r\n\r\n    const onSubmit = async (data) => {\r\n        try {\r\n            await signup(data).unwrap();\r\n            navigate('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const [passwordEye, setPasswordEye] = useState(false);\r\n\r\n    const isValidArrow =\r\n        \"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' height='12' width='12'%3E%3Cpath d='M4.5 10a1.023 1.023 0 0 1-.8-.384l-2.488-3a1 1 0 0 1 1.577-1.233L4.5 7.376l4.712-5.991a1 1 0 1 1 1.576 1.23l-5.511 7A.977.977 0 0 1 4.5 10z' fill='%23268e6c'/%3E%3C/svg%3E\";\r\n\r\n    return (\r\n        <Canvas>\r\n            <CardLayout headline=\"Создать учетную запись\">\r\n                <div className={styles.root}>\r\n                    <section className={styles.social__buttons}>\r\n                        <Link to=\"#\" className={styles.social__button}>\r\n                            <img\r\n                                className={styles.googleIcon}\r\n                                src={googleIcon}\r\n                                alt=\"Google social\"\r\n                                width=\"54px\"\r\n                                height=\"54px\"\r\n                            />\r\n                        </Link>\r\n                        <Link to=\"#\" className={styles.social__button}>\r\n                            <img\r\n                                src={facebookIcon}\r\n                                alt=\"Facebook social\"\r\n                                width=\"54px\"\r\n                                height=\"54px\"\r\n                            />\r\n                        </Link>\r\n                    </section>\r\n                    <div className={styles.socials__separator}>Или</div>\r\n                    <div className={styles.instructions}>\r\n                        <p style={{ fontWeight: 700 }}>\r\n                            Зарегистрируйтесь с помощью электронной почты\r\n                        </p>\r\n                        <p>\r\n                            У вас уже есть учетная запись? <Link to=\"/login\">Войти</Link>\r\n                        </p>\r\n                    </div>\r\n                    <form onSubmit={handleSubmit(onSubmit)} className={styles.emailForm}>\r\n                        <div className={styles.fields}>\r\n                            <div className={styles.field}>\r\n                                <label className=\"field-label\">Имя пользователя</label>\r\n                                <input\r\n                                    {...register('userName', {\r\n                                        required: 'Введите имя пользователя.',\r\n                                        minLength: {\r\n                                            value: 4,\r\n                                            message: 'Минимум 4 символа',\r\n                                        },\r\n                                        maxLength: {\r\n                                            value: 12,\r\n                                            message: 'Максимум 12 символов',\r\n                                        },\r\n                                    })}\r\n                                    type=\"text\"\r\n                                    className={`text-field  ${errors?.userName && `is-invalid`}`}\r\n                                />\r\n                                {errors?.userName && (\r\n                                    <label className=\"field-label error-label\">\r\n                                        {errors?.userName?.message}\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                            <div className={styles.name}>\r\n                                {/* Имя */}\r\n                                <div className={styles.field}>\r\n                                    <label className=\"field-label\">Имя</label>\r\n                                    <input\r\n                                        {...register('firstName', {\r\n                                            required: 'Введите имя.',\r\n                                            minLength: {\r\n                                                value: 3,\r\n                                                message: 'Минимум 3 символа.',\r\n                                            },\r\n                                            maxLength: {\r\n                                                value: 12,\r\n                                                message: 'Максимум 12 символов',\r\n                                            },\r\n                                        })}\r\n                                        type=\"text\"\r\n                                        className={`text-field ${\r\n                                            errors?.firstName && `is-invalid`\r\n                                        }`}\r\n                                    />\r\n                                    {errors?.firstName && (\r\n                                        <label className=\"field-label error-label\">\r\n                                            {errors?.firstName?.message}\r\n                                        </label>\r\n                                    )}\r\n                                </div>\r\n                                {/* Фамилия */}\r\n                                <div className={styles.field}>\r\n                                    <label className=\"field-label\">Фамилия</label>\r\n                                    <input\r\n                                        {...register('lastName', {\r\n                                            required: 'Введите фамилию.',\r\n                                            minLength: {\r\n                                                value: 3,\r\n                                                message: 'Минимум 3 символа.',\r\n                                            },\r\n                                            maxLength: {\r\n                                                value: 20,\r\n                                                message: 'Максимум 20 символов',\r\n                                            },\r\n                                        })}\r\n                                        type=\"text\"\r\n                                        className={`text-field ${errors?.lastName && `is-invalid`}`}\r\n                                    />\r\n                                    {errors?.lastName && (\r\n                                        <label className=\"field-label error-label\">\r\n                                            {errors?.lastName?.message}\r\n                                        </label>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.field}>\r\n                                <label className=\"field-label\">Адрес электронной почты</label>\r\n                                <input\r\n                                    {...register('email', {\r\n                                        required: 'Введите адрес электронной почты.',\r\n                                        pattern: {\r\n                                            value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                            message: 'Введите email',\r\n                                        },\r\n                                        minLength: {\r\n                                            value: 5,\r\n                                            message: 'Минимум 5 символов.',\r\n                                        },\r\n                                        maxLength: {\r\n                                            value: 32,\r\n                                        },\r\n                                    })}\r\n                                    type=\"email\"\r\n                                    className={`text-field  ${errors?.email && `is-invalid`}`}\r\n                                />\r\n                                {errors?.email && (\r\n                                    <label className=\"field-label error-label\">\r\n                                        {errors?.email?.message}\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                            <div className={styles.field}>\r\n                                <label className=\"field-label\">Пароль</label>\r\n                                <div className={styles.password__field}>\r\n                                    <input\r\n                                        {...register('password', {\r\n                                            required: 'Введите пароль.',\r\n                                            pattern: {\r\n                                                value: /(?=.*[0-9])(?=.*[A-Z])(?=.*[a-z])/,\r\n                                                message:\r\n                                                    'Должен содержать как строчные (a-z), так и прописные буквы (A-Z), хотя бы одну цифру (0-9) или символ',\r\n                                            },\r\n                                            minLength: {\r\n                                                value: 8,\r\n                                                message: 'Минимум 8 символов.',\r\n                                            },\r\n                                            maxLength: {\r\n                                                value: 20,\r\n                                            },\r\n                                        })}\r\n                                        className={`text-field ${\r\n                                            isValidating === true ? `is-valid` : ''\r\n                                        } ${errors?.password && `is-invalid`}`}\r\n                                        type={passwordEye === true ? 'text' : 'password'}\r\n                                    />\r\n                                    <VisibilityToggle\r\n                                        style={errors?.password ? { right: 20 } : { right: 0 }}\r\n                                        passwordEye={passwordEye}\r\n                                        setPasswordEye={setPasswordEye}\r\n                                    />\r\n                                </div>\r\n                                {errors?.password && (\r\n                                    <label className=\"field-label error-label\">\r\n                                        {errors?.password?.message}\r\n                                    </label>\r\n                                )}\r\n                            </div>\r\n                            {isError && (\r\n                                <label className=\"field-label error-label \">\r\n                                    {error.data.message}\r\n                                </label>\r\n                            )}\r\n                        </div>\r\n\r\n                        <section className={styles.submit}>\r\n                            {isLoading ? (\r\n                                <Button spinner={true} disabled={true} variant=\"cta\">\r\n                                    Создать\r\n                                </Button>\r\n                            ) : (\r\n                                <Button variant=\"cta\">Создать</Button>\r\n                            )}\r\n                        </section>\r\n                    </form>\r\n                </div>\r\n            </CardLayout>\r\n        </Canvas>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n"],"names":["Button","spinner","disabled","children","onClick","variant","className","styles","CircleLoader","color","size","VisibilityToggle","passwordEye","setPasswordEye","style","viewBox","focusable","role","d","src","logo","alt","headline","toaster","borderTopLeftRadius","borderTopRightRadius","borderRadius","navigate","useNavigate","useSignupMutation","signup","isLoading","isError","error","useForm","mode","register","formState","errors","isValidating","handleSubmit","isValid","isDirty","onSubmit","data","unwrap","console","log","useState","Canvas","CardLayout","to","googleIcon","width","height","fontWeight","required","minLength","value","message","maxLength","type","userName","firstName","lastName","pattern","email","password","right"],"sourceRoot":""}